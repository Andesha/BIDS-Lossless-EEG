%LOAD DATASET FILE...
EEG = pop_loadset('filename','[batch_dfn]','filepath','[batch_dfp]');
EEG = eeg_checkset(EEG);

% CHECK FOR IC CLASSIFICATION MARKS
if isempty(find(strcmp('brain',{EEG.marks.comp_info.label})));
    %% Use the ICLabel plugin 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % ICLabel is a database style plugin that classifies ICA components into the
    % following seven categories

    % (Brain)(Muscle)(Eye)(Heart)(Line Noise)(Channel Noise)(Other)
    % (  1  )(  2   )( 3 )(  4  )(    5     )(      6      )(  7  )

    % Colour structure and groupings are as follows:
    % ----------
    % Brain         -> [0, 0.4, 0]
    % ----------
    % Muscle        -> [0.4, 0, 0]
    % Eye           -> [0.8, 0, 0]
    % Heart         -> [0.8, 0.4, 0]
    % ----------
    % Line Noise    -> [0.2, 0.4, 0.8]
    % Channel noise -> [0.4, 0, 0.8]
    % ----------
    % Other         -> [0.8, 0.8, 0]
    % ----------

    % Create lookup table of the above information.
    pairs = {'brain',[0, 0.4, 0];
    'muscle',[0.4,0,0];
    'eye',[0.8,0,0];
    'heart',[0.8,0.4,0];
    'line_noise',[0.2,0.4,0.8];
    'chan_noise',[0.4,0,0.8];
    'other',[0.8,0.8,0]};
    lookupTable = cell2struct(pairs, {'name', 'colour'}, 2);

    % Run ICLabel
    EEG = iclabel(EEG);

    % Extract labels from the structure.
    rawLabels = zeros([1,length(EEG.etc.ic_classification.ICLabel.classifications)]);
    for index = 1:length(EEG.etc.ic_classification.ICLabel.classifications)
        [p,i] = max(EEG.etc.ic_classification.ICLabel.classifications(index, :));
        rawLabels(index) = i;
    end

    %ICLabel Exporting to marks
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%
    logging_log('INFO','UPDATE MARKS STRUCTURE WITH ICLABEL BRAIN COMPS...');
    for compStage = 1:7
        ICLabel_pass= zeros([1,length(rawLabels)]);
        ICLabel_pass(find(rawLabels==compStage)) = 1;
        ICLabel_pass = ICLabel_pass';
        EEG.marks=marks_add_label(EEG.marks,'comp_info', ...
                    {lookupTable(compStage).name,lookupTable(compStage).colour, ...
                    lookupTable(compStage).colour,1,ICLabel_pass});
    end

    %RESET/INITIATE IC MARKS...
    manual_ind=find(strcmp('manual',{EEG.marks.comp_info.label}));
    brain_ind=find(strcmp('brain',{EEG.marks.comp_info.label}));
    EEG.marks.comp_info(manual_ind).flags=~EEG.marks.comp_info(brain_ind).flags;
end

bfh=figure;
bar(EEG.etc.ic_classification.ICLabel.classifications,'stacked','Horizontal','on');
colormap(jet);
axis 'tight';
legend({ 'brain','muscle','eye','heart','line_noise','chan_noise','other'});
view(180,90);
set(gca,'ytick',[1:min(size(EEG.icasphere))])

%PLOT IC TOPOGRAPHIES...
%pop_topoplot(EEG,0, [1:min(size(EEG.icawinv))] , 'qc',0,1, 'electrodes', 'off', 'masksurf', 'on');
pop_viewprops(EEG,0);
%set(tfh,'Position',[ 1948 -9 1903 1049]);

%PLOT CHAN DATA SCROLL PLOT USING VISED PLUGIN...
EEG_scalp = pop_vised(EEG,'data_type','EEG','pop_gui','off','spacing',80,'command','');

sfh = gcf;

%PLOT IC DATA SCROLL PLOT USING VISED PLUGIN...
EEG = pop_vised(EEG,'data_type','ICA','children','sfh','pop_gui','off');
tic;

%WAIT FOR SCROLL PLOT TO CLOSE...
uiwait;

qc_time = num2str(toc);
disp(['Time taken to perform QC: ' qc_time 'sec.']);

%CLOSE/CLEAR TOPOGRAPHY PLOT HANDLES
tfh = findobj('Type', 'figure');
close(tfh(find(strcmp('View components properties - pop_viewprops() (dataset: filtLP - 1-s epochs - 1-s epochs - 1-s epochs)',{tfh.Name}))).Number);

%CLOSE/CLEAR ICLABEL BAR GRAPH
try close(bfh),clear bfh, catch clear bfh, end

%CLOSE/CLEAR EEG SCROLL PLOT HANDLES
try close(sfh),clear sfh, catch clear sfh, end

%SAVE *_qc.SET DATASET FILE... 
EEG = pop_saveset( EEG,'filename','[batch_dfn,_,-1]_qc.set','filepath','[batch_dfp]');
%init_bids_sub(EEG,'[batch_dfn,_,-2]','[_,-2,batch_dfn,.,-1]');
